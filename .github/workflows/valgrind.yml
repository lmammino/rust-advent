# This is a basic workflow to help you get started with Actions

name: Valgrind Benchmarks

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  #   paths-ignore:
  #     - 'flamegraphs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'flamegraphs/**'
#   pull_request_target:
#     branches: [ main ]
#     paths-ignore:
#       - 'flamegraphs/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "valgrind"
  valgrind:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install valgrind
        run: |
          sudo apt install -y valgrind

      - name: valgrind bench
        run: |
          cargo test --no-run --release
          for f in `find target/release/deps -executable -type f -regextype posix-extended -regex '.*/(y2021)?ex.*' | sort`; do
            echo "## $f" | tee -a this_pr.txt
            valgrind --tool=cachegrind $f --test-threads 1 2>&1 | grep 'I   refs:' | tee -a this_pr.txt
          done

          cp ./tools/delta.py /tmp/delta.py  # when I change branch to main the file can disappear

          git checkout main
          # rm -rf ./target/release/deps
          cargo test --no-run --release
          for f in `find target/release/deps -executable -type f -regextype posix-extended -regex '.*/(y2021)?ex.*' | sort`; do
            echo "## $f" | tee -a main.txt
            valgrind --tool=cachegrind $f --test-threads 1 2>&1 | grep 'I   refs:' | tee -a main.txt
          done          

      - name: compute delta
        run: |
          python /tmp/delta.py main.txt this_pr.txt > message.txt
          echo ${{ github.event.number }} > pid.txt
                                    
      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          retention-days: 5
          name: pr-comment
          path: |
            message.txt
            pid.txt
            
#       - name: "Post to PR"
#         uses: EliLillyCo/github-actions-post-to-pr@main
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           post_to_pr_definition: |
#             [
#               {
#                 "message_file": "./delta.txt",
#                 "title": "Valgrind Execution",
#                 "compare_branches": [],
#                 "collapsible": true
#               }
#             ]
