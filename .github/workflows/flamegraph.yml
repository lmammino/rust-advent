name: Flamegraph Benchmarks

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
#     branches: [ main ]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'flamegraphs/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      benchName:
        description: 'Banchmark name ex. bench_ex22'     
        required: true
        default: 'all'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  flamegraph:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install tools and libs
        run: |
          sudo apt install -y linux-tools-`uname -r`
          # pip install pillow

      - name: install flamegraph
        run: |
          cargo install flamegraph
          sudo sysctl -w kernel.perf_event_paranoid=1
          sudo sysctl -p

      - name: flamegraph bench ALL
        id: fgb
        if: ${{ github.event.inputs.benchName == 'all' || github.event.inputs.benchName == '' }}
        run: |
          export CARGO_PROFILE_RELEASE_DEBUG=true
          cargo bench --no-run
          for f in `find target/release/deps -executable -type f -name 'bench_*' | sort`; do
              file_name="${f##*/}"
              name="${file_name%-*}"
              cargo flamegraph --bench $name -- --bench > /dev/null || true
              cp flamegraph.svg flamegraphs/${name}.svg
          done

      - name: flamegraph bench ONE
        id: fgb_one
        if: ${{ github.event.inputs.benchName != 'all' }}
        run: |
          export CARGO_PROFILE_RELEASE_DEBUG=true
          name="${{ github.event.inputs.benchName }}"
          cargo flamegraph --bench $name -- --bench > /dev/null || true
          cp flamegraph.svg flamegraphs/${name}.svg
          
      - name: "Create the PR comment message"
        id: pr_comment
        run: |
          echo ${{ github.event.number }} > pid.txt
          python tools/flamegraph_comment_template.py ${{ github.repository }} $(git rev-parse HEAD) flamegraphs/* > message.txt

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          # retention-days: 5
          name: pr-comment
          path: |
            message.txt
            pid.txt
            flamegraphs/*      

#       - name: Commit flamegraph
#         uses: EndBug/add-and-commit@v7
#         with:
#           default_author: github_actions
#           message: 'Update flamegraphs SVGs'
#           add: 'flamegraphs/*'

#       - name: "Create the PR comment message"
#         id: pr_comment
#         run: |
#           PRCOMMENT="$(python tools/flamegraph_comment_template.py ${{ github.repository }} $(git rev-parse HEAD) flamegraphs/*)"        
#           echo "::set-output name=pr_comment::${PRCOMMENT//$'\n'/%0A}" 

#       - name: "Post to PR"
#         if: ${{ github.event_name == 'pull_request' }}
#         uses: unsplash/comment-on-pr@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           check_for_duplicate_msg: true
#           msg: |
#             ## Flamegraph

#             http://github.com/${{ github.repository }}/runs/${{ github.run_id }}
            
#             ${{ steps.pr_comment.outputs.pr_comment }}
