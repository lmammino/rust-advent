# This is a basic workflow to help you get started with Actions

name: Cargo Benchmarks

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  #   paths-ignore:
  #     - 'flamegraphs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'flamegraphs/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "bench"
  bench:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: cargo bench
        run: |
          git tag here
          git checkout main
          cargo bench --no-run
          mkdir -p /tmp/target/release/deps
          find target/release/deps -executable -type f -name 'bench_*' -exec cp '{}' /tmp/target/release/deps \;
          git checkout here
          cargo bench --no-run

          touch output.txt
          for f in `find target/release/deps -executable -type f -name 'bench_*' | sort`; do
            if ! cmp $f /tmp/$f >/dev/null 2>&1
            then
              /tmp/$f --bench   
              $f --bench | tee -a output.txt
            fi
          done
          #cargo bench | tee output.txt

      - name: Compute PR message
        run: |
          echo "## Cargo Bench Execution" > message.txt
          echo "" >> message.txt
          echo '<details><summary>Cargo Bench</summary><pre>' >> message.txt
          grep -B 4 -A 2 'time:' output.txt >> message.txt
          echo "" >> message.txt
          echo "</pre></details>" >> message.txt
          sed -i 's/--/<hr>/' message.txt
          echo ${{ github.event.number }} > pid.txt
                                    
      - name: Archive PR message
        uses: actions/upload-artifact@v2
        with:
          retention-days: 5
          name: pr-comment
          path: |
            message.txt
            pid.txt          
          
      # - name: "Post to PR"
      #   uses: EliLillyCo/github-actions-post-to-pr@main
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     post_to_pr_definition: |
      #       [
      #         {
      #           "message_file": "./output.txt",
      #           "title": "Cargo Bench Execution",
      #           "compare_branches": [],
      #           "modifier": "grep -B 4 -A 1 'time:'"
      #         }
      #       ]
